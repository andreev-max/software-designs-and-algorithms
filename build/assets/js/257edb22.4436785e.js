"use strict";(self.webpackChunksoftware_designs_and_algorithms=self.webpackChunksoftware_designs_and_algorithms||[]).push([[7920],{3905:function(e,t,n){n.d(t,{Zo:function(){return c},kt:function(){return u}});var i=n(7294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function r(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);t&&(i=i.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,i)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?r(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):r(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,i,a=function(e,t){if(null==e)return{};var n,i,a={},r=Object.keys(e);for(i=0;i<r.length;i++)n=r[i],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(i=0;i<r.length;i++)n=r[i],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var s=i.createContext({}),p=function(e){var t=i.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},c=function(e){var t=p(e.components);return i.createElement(s.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return i.createElement(i.Fragment,{},t)}},m=i.forwardRef((function(e,t){var n=e.components,a=e.mdxType,r=e.originalType,s=e.parentName,c=l(e,["components","mdxType","originalType","parentName"]),m=p(n),u=a,k=m["".concat(s,".").concat(u)]||m[u]||d[u]||r;return n?i.createElement(k,o(o({ref:t},c),{},{components:n})):i.createElement(k,o({ref:t},c))}));function u(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var r=n.length,o=new Array(r);o[0]=m;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l.mdxType="string"==typeof e?e:a,o[1]=l;for(var p=2;p<r;p++)o[p]=n[p];return i.createElement.apply(null,o)}return i.createElement.apply(null,n)}m.displayName="MDXCreateElement"},5041:function(e,t,n){n.r(t),n.d(t,{assets:function(){return c},contentTitle:function(){return s},default:function(){return u},frontMatter:function(){return l},metadata:function(){return p},toc:function(){return d}});var i=n(7462),a=n(3366),r=(n(7294),n(3905)),o=["components"],l={sidebar_position:8},s="7. \ud83d\udcda Home Task",p={unversionedId:"building-blocks-of-oop-part-1/hometask",id:"building-blocks-of-oop-part-1/hometask",title:"7. \ud83d\udcda Home Task",description:"The home task should be done using TypeScript.",source:"@site/docs/2-building-blocks-of-oop-part-1/hometask.md",sourceDirName:"2-building-blocks-of-oop-part-1",slug:"/building-blocks-of-oop-part-1/hometask",permalink:"/docs/building-blocks-of-oop-part-1/hometask",draft:!1,tags:[],version:"current",sidebarPosition:8,frontMatter:{sidebar_position:8},sidebar:"tutorialSidebar",previous:{title:"6. Object-oriented Design Introduction",permalink:"/docs/building-blocks-of-oop-part-1/object-oriented_design_introduction"},next:{title:"1. Composition",permalink:"/docs/building-blocks-of-oop-part-2/composition"}},c={},d=[{value:"Specific Steps",id:"specific-steps",level:2},{value:"Evaluation criteria",id:"evaluation-criteria",level:2}],m={toc:d};function u(e){var t=e.components,n=(0,a.Z)(e,o);return(0,r.kt)("wrapper",(0,i.Z)({},m,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"7--home-task"},"7. \ud83d\udcda Home Task"),(0,r.kt)("p",null,"The home task should be done using TypeScript."),(0,r.kt)("div",{className:"admonition admonition-info alert alert--info"},(0,r.kt)("div",{parentName:"div",className:"admonition-heading"},(0,r.kt)("h5",{parentName:"div"},(0,r.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,r.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"},(0,r.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M7 2.3c3.14 0 5.7 2.56 5.7 5.7s-2.56 5.7-5.7 5.7A5.71 5.71 0 0 1 1.3 8c0-3.14 2.56-5.7 5.7-5.7zM7 1C3.14 1 0 4.14 0 8s3.14 7 7 7 7-3.14 7-7-3.14-7-7-7zm1 3H6v5h2V4zm0 6H6v2h2v-2z"}))),"info")),(0,r.kt)("div",{parentName:"div",className:"admonition-content"},(0,r.kt)("p",{parentName:"div"},"The starter code for the home task is located in ",(0,r.kt)("em",{parentName:"p"},"docs/2-building-blocks-of-oop-part-1/hometask")," folder"))),(0,r.kt)("h2",{id:"specific-steps"},"Specific Steps"),(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},"Create a ",(0,r.kt)("inlineCode",{parentName:"li"},"Point")," class, which creates 2 dimensional point with coordinates. It\nshould contain:")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"two instance variables ",(0,r.kt)("inlineCode",{parentName:"li"},"x")," and ",(0,r.kt)("inlineCode",{parentName:"li"},"y"),";"),(0,r.kt)("li",{parentName:"ul"},"default constructor which creates a point at the location of (0, 0);"),(0,r.kt)("li",{parentName:"ul"},"overloaded constructor (use multiple constructors declaration for Typescript)\nwhich creates a point by ",(0,r.kt)("inlineCode",{parentName:"li"},"x")," and ",(0,r.kt)("inlineCode",{parentName:"li"},"y")," coordinates;"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"toString()")," method should return a ",(0,r.kt)("inlineCode",{parentName:"li"},"Point")," class stringified representation in\nformat: ",(0,r.kt)("inlineCode",{parentName:"li"},'"(x, y)"'),";"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"distance()")," method should be overloaded (use multiple methods declaration for\nTypescript) with next implementations:",(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"no args: distance from this point to (0, 0);"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"distance(other: Point)")," - distance from this point to a given instance of\n",(0,r.kt)("inlineCode",{parentName:"li"},"Point"),";"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"distance(x, y)")," - distance from this point to a given point (x, y).")))),(0,r.kt)("ol",{start:2},(0,r.kt)("li",{parentName:"ol"},"Create abstract superclass called ",(0,r.kt)("inlineCode",{parentName:"li"},"Shape"),", which contains:")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"two protected instance variables: ",(0,r.kt)("inlineCode",{parentName:"li"},"color")," (string), ",(0,r.kt)("inlineCode",{parentName:"li"},"filled"),"\n(boolean) and ",(0,r.kt)("inlineCode",{parentName:"li"},"points")," (Point[]);"),(0,r.kt)("li",{parentName:"ul"},"overloaded constructor (use multiple constructors declaration for Typescript): a\nconstructor that takes a list of ",(0,r.kt)("inlineCode",{parentName:"li"},"points")," and initializes the color to ",(0,r.kt)("inlineCode",{parentName:"li"},'"green"'),"\nand filled to ",(0,r.kt)("inlineCode",{parentName:"li"},"true")," by default, and a constructor that takes a list of ",(0,r.kt)("inlineCode",{parentName:"li"},"points"),",\nthe ",(0,r.kt)("inlineCode",{parentName:"li"},"color")," and ",(0,r.kt)("inlineCode",{parentName:"li"},"filled")," properties;"),(0,r.kt)("li",{parentName:"ul"},"Make sure that the ",(0,r.kt)("inlineCode",{parentName:"li"},"Shape")," has at least 3 points (2 points is just a line)."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"toString()")," method that returns ",(0,r.kt)("inlineCode",{parentName:"li"},'"A Shape with color of xxx and filled/Not\nfilled. Points: (x1, y1), (x2, y2)..."'),";"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"getPerimeter()")," that calculates the perimeter using ",(0,r.kt)("inlineCode",{parentName:"li"},"Point.distance")," method;")),(0,r.kt)("ol",{start:3},(0,r.kt)("li",{parentName:"ol"},"Create class ",(0,r.kt)("inlineCode",{parentName:"li"},"Triangle")," that takes 3 points as it's vertices. Triangle must inherit\n",(0,r.kt)("inlineCode",{parentName:"li"},"Shape")," abstract class. ",(0,r.kt)("inlineCode",{parentName:"li"},"Triangle")," should contain:")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"a constructor (use multiple constructors declaration for Typescript) which creates\n",(0,r.kt)("inlineCode",{parentName:"li"},"Triangle")," class using three instances of ",(0,r.kt)("inlineCode",{parentName:"li"},"Point")," class, may also provide color and\nfilled properties;"),(0,r.kt)("li",{parentName:"ul"},"override ",(0,r.kt)("inlineCode",{parentName:"li"},"toString()")," method, it should return a ",(0,r.kt)("inlineCode",{parentName:"li"},"Triangle")," class stringified\nrepresentation in format ",(0,r.kt)("inlineCode",{parentName:"li"},'"Triangle[v1=(x1, y1),v2=(x2, y2),v3=(x3, y3)]"'),";"),(0,r.kt)("li",{parentName:"ul"},"override ",(0,r.kt)("inlineCode",{parentName:"li"},"getType()")," method, which prints ",(0,r.kt)("inlineCode",{parentName:"li"},'"equilateral triangle"')," if all the three\nsides are equal, ",(0,r.kt)("inlineCode",{parentName:"li"},'"isosceles triangle"')," if any two of the three sides are equal, or\n",(0,r.kt)("inlineCode",{parentName:"li"},'"scalene triangle"')," if all sides are different.")),(0,r.kt)("h2",{id:"evaluation-criteria"},"Evaluation criteria"),(0,r.kt)("ol",{start:2},(0,r.kt)("li",{parentName:"ol"},"Only some classes were implemented."),(0,r.kt)("li",{parentName:"ol"},"Some classes were not implemented."),(0,r.kt)("li",{parentName:"ol"},"Some required methods are missing."),(0,r.kt)("li",{parentName:"ol"},"All tasks are implemented to a full extend.")))}u.isMDXComponent=!0}}]);